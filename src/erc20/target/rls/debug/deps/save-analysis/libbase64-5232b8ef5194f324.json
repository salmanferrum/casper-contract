{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0","program":"/Users/mac/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","base64","--edition=2018","/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=5232b8ef5194f324","-C","extra-filename=-5232b8ef5194f324","--out-dir","/Users/mac/Downloads/SolRust/rust_sol/src/erc20/target/rls/debug/deps","-L","dependency=/Users/mac/Downloads/SolRust/rust_sol/src/erc20/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/mac/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/mac/Downloads/SolRust/rust_sol/src/erc20/target/rls/debug/deps/libbase64-5232b8ef5194f324.rmeta"},"prelude":{"crate_id":{"name":"base64","disambiguator":[8597529482731431397,0]},"crate_root":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src","external_crates":[{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17620493357780722015,0]}},{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8536893982055166750,0]}},{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16830480400437399750,0]}},{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[16950346670451817772,0]}}],"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":0,"byte_end":8809,"line_start":1,"line_end":245,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3920,"byte_end":3939,"line_start":88,"line_end":88,"column_start":24,"column_end":43},"alias_span":null,"name":"encode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4019,"byte_end":4025,"line_start":90,"line_end":90,"column_start":25,"column_end":31},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4027,"byte_end":4040,"line_start":90,"line_end":90,"column_start":33,"column_end":46},"alias_span":null,"name":"encode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4042,"byte_end":4059,"line_start":90,"line_end":90,"column_start":48,"column_end":65},"alias_span":null,"name":"encode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4153,"byte_end":4159,"line_start":94,"line_end":94,"column_start":25,"column_end":31},"alias_span":null,"name":"decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4161,"byte_end":4174,"line_start":94,"line_end":94,"column_start":33,"column_end":46},"alias_span":null,"name":"decode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4176,"byte_end":4193,"line_start":94,"line_end":94,"column_start":48,"column_end":65},"alias_span":null,"name":"decode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4220,"byte_end":4239,"line_start":95,"line_end":95,"column_start":25,"column_end":44},"alias_span":null,"name":"decode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4241,"byte_end":4252,"line_start":95,"line_end":95,"column_start":46,"column_end":57},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":0,"byte_end":8809,"line_start":1,"line_end":245,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":50},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":276},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":212},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" # Configs","sig":null,"attributes":[{"value":"/ # Configs","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":0,"byte_end":13,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":14,"byte_end":17,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ There isn't just one type of Base64; that would be too simple. You need to choose a character","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":18,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ set (standard, URL-safe, etc) and padding suffix (yes/no).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":116,"byte_end":178,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/ The `Config` struct encapsulates this info. There are some common configs included: `STANDARD`,","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":179,"byte_end":278,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ `URL_SAFE`, etc. You can also make your own `Config` if needed.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":279,"byte_end":346,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":347,"byte_end":350,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The functions that don't have `config` in the name (e.g. `encode()` and `decode()`) use the","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":351,"byte_end":446,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ `STANDARD` config .","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":447,"byte_end":470,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":471,"byte_end":474,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The functions that write to a slice (the ones that end in `_slice`) are generally the fastest","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":475,"byte_end":572,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ because they don't need to resize anything. If it fits in your workflow and you care about","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":573,"byte_end":667,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ performance, keep using the same buffer (growing as need be) and use the `_slice` methods for","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":668,"byte_end":765,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ the best performance.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":766,"byte_end":791,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":792,"byte_end":795,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":796,"byte_end":810,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":811,"byte_end":814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Several different encoding functions are available to you depending on your desire for","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":815,"byte_end":905,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"/ convenience vs performance.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":906,"byte_end":937,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":938,"byte_end":941,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ | Function                | Output                       | Allocates                      |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":942,"byte_end":1037,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ | ----------------------- | ---------------------------- | ------------------------------ |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1038,"byte_end":1133,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"/ | `encode`                | Returns a new `String`       | Always                         |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1134,"byte_end":1229,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ | `encode_config`         | Returns a new `String`       | Always                         |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1230,"byte_end":1325,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ | `encode_config_buf`     | Appends to provided `String` | Only if `String` needs to grow |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1326,"byte_end":1421,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ | `encode_config_slice`   | Writes to provided `&[u8]`   | Never                          |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1422,"byte_end":1517,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1518,"byte_end":1521,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ All of the encoding functions that take a `Config` will pad as per the config.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1522,"byte_end":1604,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1605,"byte_end":1608,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1609,"byte_end":1623,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1624,"byte_end":1627,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Just as for encoding, there are different decoding functions available.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1628,"byte_end":1703,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1704,"byte_end":1707,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ | Function                | Output                        | Allocates                      |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1708,"byte_end":1804,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ | ----------------------- | ----------------------------- | ------------------------------ |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1805,"byte_end":1901,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ | `decode`                | Returns a new `Vec<u8>`       | Always                         |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1902,"byte_end":1998,"line_start":36,"line_end":36,"column_start":1,"column_end":97}},{"value":"/ | `decode_config`         | Returns a new `Vec<u8>`       | Always                         |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":1999,"byte_end":2095,"line_start":37,"line_end":37,"column_start":1,"column_end":97}},{"value":"/ | `decode_config_buf`     | Appends to provided `Vec<u8>` | Only if `Vec` needs to grow    |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2096,"byte_end":2192,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ | `decode_config_slice`   | Writes to provided `&[u8]`    | Never                          |","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2193,"byte_end":2289,"line_start":39,"line_end":39,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2290,"byte_end":2293,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Unlike encoding, where all possible input is valid, decoding can fail (see `DecodeError`).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2294,"byte_end":2388,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2389,"byte_end":2392,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Input can be invalid because it has invalid characters or invalid padding. (No padding at all is","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2393,"byte_end":2493,"line_start":43,"line_end":43,"column_start":1,"column_end":101}},{"value":"/ valid, but excess padding is not.) Whitespace in the input is invalid.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2494,"byte_end":2568,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2569,"byte_end":2572,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # `Read` and `Write`","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2573,"byte_end":2597,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2598,"byte_end":2601,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ To map a `Read` of b64 bytes to the decoded bytes, wrap a reader (file, network socket, etc)","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2602,"byte_end":2698,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/ with `base64::read::DecoderReader`. To write raw bytes and have them b64 encoded on the fly,","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2699,"byte_end":2795,"line_start":49,"line_end":49,"column_start":1,"column_end":97}},{"value":"/ wrap a writer with `base64::write::EncoderWriter`. There is some performance overhead (15% or","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2796,"byte_end":2893,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ so) because of the necessary buffer shuffling -- still fast enough that almost nobody cares.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2894,"byte_end":2990,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ Also, these implementations do not heap allocate.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":2991,"byte_end":3044,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3045,"byte_end":3048,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3049,"byte_end":3061,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3062,"byte_end":3065,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ If length calculations result in overflowing `usize`, a panic will result.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3066,"byte_end":3144,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3145,"byte_end":3148,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `_slice` flavors of encode or decode will panic if the provided output slice is too small,","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3149,"byte_end":3247,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"deny(missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_results,\n       variant_size_differences, warnings)","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3318,"byte_end":3508,"line_start":61,"line_end":70,"column_start":1,"column_end":3}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3509,"byte_end":3532,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"no_std","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3578,"byte_end":3584,"line_start":72,"line_end":72,"column_start":46,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":27},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/chunked_encoder.rs","byte_start":9136,"byte_end":9141,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Error","qualname":"::chunked_encoder::Sink::Error","value":"type Error;","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":50},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::display","value":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":85}],"decl_id":null,"docs":" Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","sig":null,"attributes":[{"value":"/ Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16355,"byte_end":16455,"line_start":1,"line_end":1,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16456,"byte_end":16459,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16460,"byte_end":16467,"line_start":3,"line_end":3,"column_start":1,"column_end":8}},{"value":"/ use base64::display::Base64Display;","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16468,"byte_end":16507,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16508,"byte_end":16511,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ let data = vec![0x0, 0x1, 0x2, 0x3];","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16512,"byte_end":16552,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/ let wrapper = Base64Display::with_config(&data, base64::STANDARD);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16553,"byte_end":16623,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16624,"byte_end":16627,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", wrapper));","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16628,"byte_end":16695,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16696,"byte_end":16703,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":71},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16932,"byte_end":16945,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"Base64Display","qualname":"::display::Base64Display","value":"Base64Display {  }","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"decl_id":null,"docs":" A convenience wrapper for base64'ing bytes into a format string without heap allocation.\n","sig":null,"attributes":[{"value":"/ A convenience wrapper for base64'ing bytes into a format string without heap allocation.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":16828,"byte_end":16920,"line_start":17,"line_end":17,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":17112,"byte_end":17123,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Base64Display>::with_config","value":"pub fn with_config(&[u8], Config) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":" Create a `Base64Display` with the provided config.\n","sig":null,"attributes":[{"value":"/ Create a `Base64Display` with the provided config.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":17046,"byte_end":17100,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99210,"byte_end":99216,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode::encode","value":"pub fn encode<T: AsRef<[u8]>>(T) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.\nConvenience for `encode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"/Encode arbitrary octets as base64.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":98864,"byte_end":98901,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/Returns a String.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":98902,"byte_end":98922,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/Convenience for `encode_config(input, base64::STANDARD);`.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":98923,"byte_end":98984,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":98985,"byte_end":98988,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":98989,"byte_end":99001,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99002,"byte_end":99005,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99006,"byte_end":99016,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99017,"byte_end":99040,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99041,"byte_end":99044,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99045,"byte_end":99059,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/    let b64 = base64::encode(b\"hello world\");","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99060,"byte_end":99108,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/    println!(\"{}\", b64);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99109,"byte_end":99136,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/}","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99137,"byte_end":99141,"line_start":20,"line_end":20,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99142,"byte_end":99148,"line_start":21,"line_end":21,"column_start":1,"column_end":7}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99149,"byte_end":99202,"line_start":22,"line_end":22,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":119},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99721,"byte_end":99734,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"encode_config","qualname":"::encode::encode_config","value":"pub fn encode_config<T: AsRef<[u8]>>(T, Config) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.","sig":null,"attributes":[{"value":"/Encode arbitrary octets as base64.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99293,"byte_end":99330,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/Returns a String.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99331,"byte_end":99351,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99352,"byte_end":99355,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99356,"byte_end":99368,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99369,"byte_end":99372,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99373,"byte_end":99383,"line_start":32,"line_end":32,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99384,"byte_end":99407,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99408,"byte_end":99411,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99412,"byte_end":99426,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/    let b64 = base64::encode_config(b\"hello world~\", base64::STANDARD);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99427,"byte_end":99501,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/    println!(\"{}\", b64);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99502,"byte_end":99529,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99530,"byte_end":99533,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/    let b64_url = base64::encode_config(b\"hello internet~\", base64::URL_SAFE);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99534,"byte_end":99615,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/    println!(\"{}\", b64_url);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99616,"byte_end":99647,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/}","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99648,"byte_end":99652,"line_start":41,"line_end":41,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99653,"byte_end":99659,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":99660,"byte_end":99713,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100642,"byte_end":100659,"line_start":74,"line_end":74,"column_start":8,"column_end":25},"name":"encode_config_buf","qualname":"::encode::encode_config_buf","value":"pub fn encode_config_buf<T: AsRef<[u8]>>(T, Config, &mut String)","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nWrites into the supplied output buffer, which will grow the buffer if needed.","sig":null,"attributes":[{"value":"/Encode arbitrary octets as base64.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100098,"byte_end":100135,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/Writes into the supplied output buffer, which will grow the buffer if needed.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100136,"byte_end":100216,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100217,"byte_end":100220,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100221,"byte_end":100233,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100234,"byte_end":100237,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100238,"byte_end":100248,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100249,"byte_end":100272,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100273,"byte_end":100276,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100277,"byte_end":100291,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/    let mut buf = String::new();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100292,"byte_end":100327,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/    base64::encode_config_buf(b\"hello world~\", base64::STANDARD, &mut buf);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100328,"byte_end":100406,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/    println!(\"{}\", buf);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100407,"byte_end":100434,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100435,"byte_end":100438,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/    buf.clear();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100439,"byte_end":100458,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/    base64::encode_config_buf(b\"hello internet~\", base64::URL_SAFE, &mut buf);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100459,"byte_end":100540,"line_start":69,"line_end":69,"column_start":1,"column_end":82}},{"value":"/    println!(\"{}\", buf);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100541,"byte_end":100568,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"/}","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100569,"byte_end":100573,"line_start":71,"line_end":71,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100574,"byte_end":100580,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":100581,"byte_end":100634,"line_start":73,"line_end":73,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101935,"byte_end":101954,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"encode_config_slice","qualname":"::encode::encode_config_slice","value":"pub fn encode_config_slice<T: AsRef<[u8]>>(T, Config, &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode arbitrary octets as base64.\n Writes into the supplied output buffer.","sig":null,"attributes":[{"value":"/ Encode arbitrary octets as base64.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101025,"byte_end":101063,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ Writes into the supplied output buffer.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101064,"byte_end":101107,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101108,"byte_end":101111,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This is useful if you wish to avoid allocation entirely (e.g. encoding into a stack-resident","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101112,"byte_end":101208,"line_start":90,"line_end":90,"column_start":1,"column_end":97}},{"value":"/ or statically-allocated buffer).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101209,"byte_end":101245,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101246,"byte_end":101249,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101250,"byte_end":101262,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101263,"byte_end":101266,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ If `output` is too small to hold the encoded version of `input`, a panic will result.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101267,"byte_end":101356,"line_start":95,"line_end":95,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101357,"byte_end":101360,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101361,"byte_end":101374,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101375,"byte_end":101378,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101379,"byte_end":101390,"line_start":99,"line_end":99,"column_start":1,"column_end":12}},{"value":"/ extern crate base64;","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101391,"byte_end":101415,"line_start":100,"line_end":100,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101416,"byte_end":101419,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101420,"byte_end":101435,"line_start":102,"line_end":102,"column_start":1,"column_end":16}},{"value":"/     let s = b\"hello internet!\";","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101436,"byte_end":101471,"line_start":103,"line_end":103,"column_start":1,"column_end":36}},{"value":"/     let mut buf = Vec::new();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101472,"byte_end":101505,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/     // make sure we'll have a slice big enough for base64 + padding","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101506,"byte_end":101577,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/     buf.resize(s.len() * 4 / 3 + 4, 0);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101578,"byte_end":101621,"line_start":106,"line_end":106,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101622,"byte_end":101625,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     let bytes_written = base64::encode_config_slice(s,","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101626,"byte_end":101684,"line_start":108,"line_end":108,"column_start":1,"column_end":59}},{"value":"/                             base64::STANDARD, &mut buf);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101685,"byte_end":101745,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101746,"byte_end":101749,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     // shorten our vec down to just what was written","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101750,"byte_end":101806,"line_start":111,"line_end":111,"column_start":1,"column_end":57}},{"value":"/     buf.resize(bytes_written, 0);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101807,"byte_end":101844,"line_start":112,"line_end":112,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101845,"byte_end":101848,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(s, base64::decode(&buf).unwrap().as_slice());","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101849,"byte_end":101913,"line_start":114,"line_end":114,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101914,"byte_end":101919,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs","byte_start":101920,"byte_end":101927,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123303,"byte_end":123314,"line_start":30,"line_end":30,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::decode::DecodeError::InvalidByte","value":"DecodeError::InvalidByte(usize, u8)","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" An invalid byte was found in the input. The offset and offending byte are provided.\n","sig":null,"attributes":[{"value":"/ An invalid byte was found in the input. The offset and offending byte are provided.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123211,"byte_end":123298,"line_start":29,"line_end":29,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":259},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123747,"byte_end":123760,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::decode::DecodeError::InvalidLength","value":"DecodeError::InvalidLength","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" The length of the input is invalid.\n A typical cause of this is stray trailing whitespace or other separator bytes.\n In the case where excess trailing bytes have produced an invalid length *and* the last byte\n is also an invalid base64 symbol (as would be the case for whitespace, etc), `InvalidByte`\n will be emitted instead of `InvalidLength` to make the issue easier to debug.\n","sig":null,"attributes":[{"value":"/ The length of the input is invalid.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123331,"byte_end":123370,"line_start":31,"line_end":31,"column_start":5,"column_end":44}},{"value":"/ A typical cause of this is stray trailing whitespace or other separator bytes.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123375,"byte_end":123457,"line_start":32,"line_end":32,"column_start":5,"column_end":87}},{"value":"/ In the case where excess trailing bytes have produced an invalid length *and* the last byte","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123462,"byte_end":123557,"line_start":33,"line_end":33,"column_start":5,"column_end":100}},{"value":"/ is also an invalid base64 symbol (as would be the case for whitespace, etc), `InvalidByte`","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123562,"byte_end":123656,"line_start":34,"line_end":34,"column_start":5,"column_end":99}},{"value":"/ will be emitted instead of `InvalidLength` to make the issue easier to debug.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123661,"byte_end":123742,"line_start":35,"line_end":35,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":124103,"byte_end":124120,"line_start":41,"line_end":41,"column_start":5,"column_end":22},"name":"InvalidLastSymbol","qualname":"::decode::DecodeError::InvalidLastSymbol","value":"DecodeError::InvalidLastSymbol(usize, u8)","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\n This is indicative of corrupted or truncated Base64.\n Unlike InvalidByte, which reports symbols that aren't in the alphabet, this error is for\n symbols that are in the alphabet but represent nonsensical encodings.\n","sig":null,"attributes":[{"value":"/ The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123766,"byte_end":123862,"line_start":37,"line_end":37,"column_start":5,"column_end":101}},{"value":"/ This is indicative of corrupted or truncated Base64.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123867,"byte_end":123923,"line_start":38,"line_end":38,"column_start":5,"column_end":61}},{"value":"/ Unlike InvalidByte, which reports symbols that aren't in the alphabet, this error is for","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123928,"byte_end":124020,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ symbols that are in the alphabet but represent nonsensical encodings.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":124025,"byte_end":124098,"line_start":40,"line_end":40,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":254},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123193,"byte_end":123204,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::decode::DecodeError","value":"pub enum DecodeError {\n    InvalidByte(usize, u8),\n    InvalidLength,\n    InvalidLastSymbol(usize, u8),\n}","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":261}],"decl_id":null,"docs":" Errors that can occur while decoding.\n","sig":null,"attributes":[{"value":"/ Errors that can occur while decoding.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":123103,"byte_end":123144,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":177},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125466,"byte_end":125472,"line_start":88,"line_end":88,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode::decode","value":"pub fn decode<T: AsRef<[u8]>>(T) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.\nConvenience `decode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"/Decode from string reference as octets.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125079,"byte_end":125121,"line_start":73,"line_end":73,"column_start":1,"column_end":43}},{"value":"/Returns a Result containing a Vec<u8>.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125122,"byte_end":125163,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/Convenience `decode_config(input, base64::STANDARD);`.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125164,"byte_end":125221,"line_start":75,"line_end":75,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125222,"byte_end":125225,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125226,"byte_end":125238,"line_start":77,"line_end":77,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125239,"byte_end":125242,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125243,"byte_end":125253,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125254,"byte_end":125277,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125278,"byte_end":125281,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125282,"byte_end":125296,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/    let bytes = base64::decode(\"aGVsbG8gd29ybGQ=\").unwrap();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125297,"byte_end":125360,"line_start":83,"line_end":83,"column_start":1,"column_end":64}},{"value":"/    println!(\"{:?}\", bytes);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125361,"byte_end":125392,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/}","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125393,"byte_end":125397,"line_start":85,"line_end":85,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125398,"byte_end":125404,"line_start":86,"line_end":86,"column_start":1,"column_end":7}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125405,"byte_end":125458,"line_start":87,"line_end":87,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":179},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126070,"byte_end":126083,"line_start":109,"line_end":109,"column_start":8,"column_end":21},"name":"decode_config","qualname":"::decode::decode_config","value":"pub fn decode_config<T: AsRef<[u8]>>(T, Config)\n-> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.","sig":null,"attributes":[{"value":"/Decode from string reference as octets.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125571,"byte_end":125613,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/Returns a Result containing a Vec<u8>.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125614,"byte_end":125655,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125656,"byte_end":125659,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125660,"byte_end":125672,"line_start":95,"line_end":95,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125673,"byte_end":125676,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125677,"byte_end":125687,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125688,"byte_end":125711,"line_start":98,"line_end":98,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125712,"byte_end":125715,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125716,"byte_end":125730,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/    let bytes = base64::decode_config(\"aGVsbG8gd29ybGR+Cg==\", base64::STANDARD).unwrap();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125731,"byte_end":125823,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/    println!(\"{:?}\", bytes);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125824,"byte_end":125855,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125856,"byte_end":125859,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/    let bytes_url = base64::decode_config(\"aGVsbG8gaW50ZXJuZXR-Cg==\", base64::URL_SAFE).unwrap();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125860,"byte_end":125960,"line_start":104,"line_end":104,"column_start":1,"column_end":101}},{"value":"/    println!(\"{:?}\", bytes_url);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125961,"byte_end":125996,"line_start":105,"line_end":105,"column_start":1,"column_end":36}},{"value":"/}","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":125997,"byte_end":126001,"line_start":106,"line_end":106,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126002,"byte_end":126008,"line_start":107,"line_end":107,"column_start":1,"column_end":7}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126009,"byte_end":126062,"line_start":108,"line_end":108,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126960,"byte_end":126977,"line_start":137,"line_end":137,"column_start":8,"column_end":25},"name":"decode_config_buf","qualname":"::decode::decode_config_buf","value":"pub fn decode_config_buf<T: AsRef<[u8]>>(T, Config, &mut Vec<u8>)\n-> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nWrites into the supplied buffer to avoid allocation.\nReturns a Result containing an empty tuple, aka ().","sig":null,"attributes":[{"value":"/Decode from string reference as octets.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126307,"byte_end":126349,"line_start":115,"line_end":115,"column_start":1,"column_end":43}},{"value":"/Writes into the supplied buffer to avoid allocation.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126350,"byte_end":126405,"line_start":116,"line_end":116,"column_start":1,"column_end":56}},{"value":"/Returns a Result containing an empty tuple, aka ().","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126406,"byte_end":126460,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126461,"byte_end":126464,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126465,"byte_end":126477,"line_start":119,"line_end":119,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126478,"byte_end":126481,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126482,"byte_end":126492,"line_start":121,"line_end":121,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126493,"byte_end":126516,"line_start":122,"line_end":122,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126517,"byte_end":126520,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126521,"byte_end":126535,"line_start":124,"line_end":124,"column_start":1,"column_end":15}},{"value":"/    let mut buffer = Vec::<u8>::new();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126536,"byte_end":126577,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/    base64::decode_config_buf(\"aGVsbG8gd29ybGR+Cg==\", base64::STANDARD, &mut buffer).unwrap();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126578,"byte_end":126675,"line_start":126,"line_end":126,"column_start":1,"column_end":98}},{"value":"/    println!(\"{:?}\", buffer);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126676,"byte_end":126708,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126709,"byte_end":126712,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/    buffer.clear();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126713,"byte_end":126735,"line_start":129,"line_end":129,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126736,"byte_end":126739,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/    base64::decode_config_buf(\"aGVsbG8gaW50ZXJuZXR-Cg==\", base64::URL_SAFE, &mut buffer)","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126740,"byte_end":126831,"line_start":131,"line_end":131,"column_start":1,"column_end":92}},{"value":"/        .unwrap();","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126832,"byte_end":126853,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/    println!(\"{:?}\", buffer);","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126854,"byte_end":126886,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/}","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126887,"byte_end":126891,"line_start":134,"line_end":134,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126892,"byte_end":126898,"line_start":135,"line_end":135,"column_start":1,"column_end":7}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":126899,"byte_end":126952,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":128233,"byte_end":128252,"line_start":173,"line_end":173,"column_start":8,"column_end":27},"name":"decode_config_slice","qualname":"::decode::decode_config_slice","value":"pub fn decode_config_slice<T: AsRef<[u8]>>(T, Config, &mut [u8])\n-> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode the input into the provided output slice.","sig":null,"attributes":[{"value":"/ Decode the input into the provided output slice.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":127742,"byte_end":127794,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":127795,"byte_end":127798,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ This will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":127799,"byte_end":127898,"line_start":166,"line_end":166,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":127899,"byte_end":127902,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ If you don't know ahead of time what the decoded length should be, size your buffer with a","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":127903,"byte_end":127997,"line_start":168,"line_end":168,"column_start":1,"column_end":95}},{"value":"/ conservative estimate for the decoded length of an input: 3 bytes of output for every 4 bytes of","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":127998,"byte_end":128098,"line_start":169,"line_end":169,"column_start":1,"column_end":101}},{"value":"/ input, rounded up, or in other words `(input_len + 3) / 4 * 3`.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":128099,"byte_end":128166,"line_start":170,"line_end":170,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":128167,"byte_end":128170,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ If the slice is not large enough, this will panic.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":128171,"byte_end":128225,"line_start":172,"line_end":172,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":277},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4511,"byte_end":4519,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"Standard","qualname":"::CharacterSet::Standard","value":"CharacterSet::Standard","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The standard character set (uses `+` and `/`).","sig":null,"attributes":[{"value":"/ The standard character set (uses `+` and `/`).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4377,"byte_end":4427,"line_start":103,"line_end":103,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4432,"byte_end":4435,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ See [RFC 3548](https://tools.ietf.org/html/rfc3548#section-3).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4440,"byte_end":4506,"line_start":105,"line_end":105,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":279},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4659,"byte_end":4666,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"name":"UrlSafe","qualname":"::CharacterSet::UrlSafe","value":"CharacterSet::UrlSafe","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The URL safe character set (uses `-` and `_`).","sig":null,"attributes":[{"value":"/ The URL safe character set (uses `-` and `_`).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4525,"byte_end":4575,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4580,"byte_end":4583,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ See [RFC 3548](https://tools.ietf.org/html/rfc3548#section-4).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4588,"byte_end":4654,"line_start":109,"line_end":109,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":281},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4892,"byte_end":4897,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::CharacterSet::Crypt","value":"CharacterSet::Crypt","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The `crypt(3)` character set (uses `./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`).","sig":null,"attributes":[{"value":"/ The `crypt(3)` character set (uses `./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4672,"byte_end":4779,"line_start":111,"line_end":111,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4784,"byte_end":4787,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Not standardized, but folk wisdom on the net asserts that this alphabet is what crypt uses.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4792,"byte_end":4887,"line_start":113,"line_end":113,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":283},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5011,"byte_end":5017,"line_start":116,"line_end":116,"column_start":5,"column_end":11},"name":"Bcrypt","qualname":"::CharacterSet::Bcrypt","value":"CharacterSet::Bcrypt","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The bcrypt character set (uses `./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789`).\n","sig":null,"attributes":[{"value":"/ The bcrypt character set (uses `./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789`).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4903,"byte_end":5006,"line_start":115,"line_end":115,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":285},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5179,"byte_end":5188,"line_start":120,"line_end":120,"column_start":5,"column_end":14},"name":"ImapMutf7","qualname":"::CharacterSet::ImapMutf7","value":"CharacterSet::ImapMutf7","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The character set used in IMAP-modified UTF-7 (uses `+` and `,`).","sig":null,"attributes":[{"value":"/ The character set used in IMAP-modified UTF-7 (uses `+` and `,`).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5023,"byte_end":5092,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5097,"byte_end":5100,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ See [RFC 3501](https://tools.ietf.org/html/rfc3501#section-5.1.3)","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5105,"byte_end":5174,"line_start":119,"line_end":119,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":287},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5349,"byte_end":5355,"line_start":124,"line_end":124,"column_start":5,"column_end":11},"name":"BinHex","qualname":"::CharacterSet::BinHex","value":"CharacterSet::BinHex","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The character set used in BinHex 4.0 files.","sig":null,"attributes":[{"value":"/ The character set used in BinHex 4.0 files.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5194,"byte_end":5241,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5246,"byte_end":5249,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ See [BinHex 4.0 Definition](http://files.stairways.com/other/binhex-40-specs-info.txt)","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5254,"byte_end":5344,"line_start":123,"line_end":123,"column_start":5,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":276},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4358,"byte_end":4370,"line_start":102,"line_end":102,"column_start":10,"column_end":22},"name":"CharacterSet","qualname":"::CharacterSet","value":"pub enum CharacterSet { Standard, UrlSafe, Crypt, Bcrypt, ImapMutf7, BinHex, }","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287}],"decl_id":null,"docs":" Available encoding character sets\n","sig":null,"attributes":[{"value":"/ Available encoding character sets","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":4281,"byte_end":4318,"line_start":100,"line_end":100,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":6388,"byte_end":6394,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"decl_id":null,"docs":" Contains configuration parameters for base64 encoding\n","sig":null,"attributes":[{"value":"/ Contains configuration parameters for base64 encoding","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":6289,"byte_end":6346,"line_start":151,"line_end":151,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":6719,"byte_end":6722,"line_start":164,"line_end":164,"column_start":18,"column_end":21},"name":"new","qualname":"<Config>::new","value":"pub const fn new(CharacterSet, bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Config`.\n","sig":null,"attributes":[{"value":"/ Create a new `Config`.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":6675,"byte_end":6701,"line_start":163,"line_end":163,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":6963,"byte_end":6966,"line_start":173,"line_end":173,"column_start":18,"column_end":21},"name":"pad","qualname":"<Config>::pad","value":"pub const fn pad(Self, bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to pad output with `=` characters.\n","sig":null,"attributes":[{"value":"/ Sets whether to pad output with `=` characters.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":6894,"byte_end":6945,"line_start":172,"line_end":172,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7254,"byte_end":7280,"line_start":181,"line_end":181,"column_start":18,"column_end":44},"name":"decode_allow_trailing_bits","qualname":"<Config>::decode_allow_trailing_bits","value":"pub const fn decode_allow_trailing_bits(Self, bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to emit errors for nonzero trailing bits.","sig":null,"attributes":[{"value":"/ Sets whether to emit errors for nonzero trailing bits.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7038,"byte_end":7096,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7101,"byte_end":7104,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is useful when implementing","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7109,"byte_end":7145,"line_start":179,"line_end":179,"column_start":5,"column_end":41}},{"value":"/ [forgiving-base64 decode](https://infra.spec.whatwg.org/#forgiving-base64-decode).","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7150,"byte_end":7236,"line_start":180,"line_end":180,"column_start":5,"column_end":91}}]},{"kind":"Const","id":{"krate":0,"index":221},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7465,"byte_end":7473,"line_start":190,"line_end":190,"column_start":11,"column_end":19},"name":"STANDARD","qualname":"::STANDARD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set with padding.\n","sig":null,"attributes":[{"value":"/ Standard character set with padding.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7414,"byte_end":7454,"line_start":189,"line_end":189,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":222},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7643,"byte_end":7658,"line_start":197,"line_end":197,"column_start":11,"column_end":26},"name":"STANDARD_NO_PAD","qualname":"::STANDARD_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set without padding.\n","sig":null,"attributes":[{"value":"/ Standard character set without padding.","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7589,"byte_end":7632,"line_start":196,"line_end":196,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":223},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7825,"byte_end":7833,"line_start":204,"line_end":204,"column_start":11,"column_end":19},"name":"URL_SAFE","qualname":"::URL_SAFE","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set with padding\n","sig":null,"attributes":[{"value":"/ URL-safe character set with padding","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7775,"byte_end":7814,"line_start":203,"line_end":203,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":224},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":8001,"byte_end":8016,"line_start":211,"line_end":211,"column_start":11,"column_end":26},"name":"URL_SAFE_NO_PAD","qualname":"::URL_SAFE_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set without padding\n","sig":null,"attributes":[{"value":"/ URL-safe character set without padding","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":7948,"byte_end":7990,"line_start":210,"line_end":210,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":225},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":8177,"byte_end":8182,"line_start":218,"line_end":218,"column_start":11,"column_end":16},"name":"CRYPT","qualname":"::CRYPT","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" As per `crypt(3)` requirements\n","sig":null,"attributes":[{"value":"/ As per `crypt(3)` requirements","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":8132,"byte_end":8166,"line_start":217,"line_end":217,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":226},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":8331,"byte_end":8337,"line_start":225,"line_end":225,"column_start":11,"column_end":17},"name":"BCRYPT","qualname":"::BCRYPT","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Bcrypt character set\n","sig":null,"attributes":[{"value":"/ Bcrypt character set","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":8296,"byte_end":8320,"line_start":224,"line_end":224,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":227},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":8499,"byte_end":8509,"line_start":232,"line_end":232,"column_start":11,"column_end":21},"name":"IMAP_MUTF7","qualname":"::IMAP_MUTF7","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" IMAP modified UTF-7 requirements\n","sig":null,"attributes":[{"value":"/ IMAP modified UTF-7 requirements","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":8452,"byte_end":8488,"line_start":231,"line_end":231,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":228},"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":8662,"byte_end":8668,"line_start":239,"line_end":239,"column_start":11,"column_end":17},"name":"BINHEX","qualname":"::BINHEX","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" BinHex character set\n","sig":null,"attributes":[{"value":"/ BinHex character set","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":8627,"byte_end":8651,"line_start":238,"line_end":238,"column_start":1,"column_end":25}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/chunked_encoder.rs","byte_start":9492,"byte_end":9506,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/chunked_encoder.rs","byte_start":11826,"byte_end":11836,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/chunked_encoder.rs","byte_start":12011,"byte_end":12021,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":17022,"byte_end":17035,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":17314,"byte_end":17327,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":17648,"byte_end":17661,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":124158,"byte_end":124169,"line_start":44,"line_end":44,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5365,"byte_end":5377,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":6662,"byte_end":6668,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":3764,"byte_end":3771,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":50}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/chunked_encoder.rs","byte_start":9492,"byte_end":9506,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/chunked_encoder.rs","byte_start":11826,"byte_end":11836,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/chunked_encoder.rs","byte_start":12011,"byte_end":12021,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":17022,"byte_end":17035,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":17314,"byte_end":17327,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":71},"to":{"krate":1,"index":9398}},{"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs","byte_start":17648,"byte_end":17661,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":81},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs","byte_start":124158,"byte_end":124169,"line_start":44,"line_end":44,"column_start":23,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":254},"to":{"krate":1,"index":9398}},{"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":5365,"byte_end":5377,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mac/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs","byte_start":6662,"byte_end":6668,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}}]}